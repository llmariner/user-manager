{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/user_manager_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UsersService"
    },
    {
      "name": "UsersInternalService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/api_keys": {
      "get": {
        "operationId": "UsersService_ListAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAPIKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_CreateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAPIKeyRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/api_keys/{apiKey.id}": {
      "patch": {
        "operationId": "UsersService_UpdateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "apiKey.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "api_key is the API key to update.\n\nThe key's id is used to identify the key to update.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1APIKey"
            }
          },
          {
            "name": "updateMask",
            "description": "The list of fields to update.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/api_keys/{id}": {
      "delete": {
        "operationId": "UsersService_DeleteAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAPIKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations": {
      "get": {
        "operationId": "UsersService_ListOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "includeSummary",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{id}": {
      "delete": {
        "operationId": "UsersService_DeleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/projects": {
      "get": {
        "operationId": "UsersService_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeSummary",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Project"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "kubernetesNamespace": {
                  "type": "string"
                },
                "assignments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1ProjectAssignment"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/projects/{id}": {
      "delete": {
        "operationId": "UsersService_DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/projects/{projectId}/api_keys": {
      "get": {
        "operationId": "UsersService_ListProjectAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAPIKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "summary": "TODO(kenji): Remove the follwoing three RPC endpoints in favor of \"/v1/api_keys\".",
        "operationId": "UsersService_CreateProjectAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/projects/{projectId}/api_keys/{id}": {
      "delete": {
        "operationId": "UsersService_DeleteProjectAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAPIKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/projects/{projectId}/users": {
      "get": {
        "operationId": "UsersService_ListProjectUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProjectUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "description": "organization_id and project_id must be set for UsersService. It is no-op for UsersInternalService.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_CreateProjectUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/v1ProjectRole"
                }
              }
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/projects/{projectId}/users/{userId}": {
      "delete": {
        "operationId": "UsersService_DeleteProjectUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/users": {
      "get": {
        "operationId": "UsersService_ListOrganizationUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "description": "organization_id must be set for UsersService. It is no-op for UsersInternalService.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_CreateOrganizationUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrganizationUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string"
                },
                "role": {
                  "$ref": "#/definitions/v1OrganizationRole"
                }
              }
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/users/{userId}": {
      "delete": {
        "operationId": "UsersService_DeleteOrganizationUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users:getSelf": {
      "get": {
        "operationId": "UsersService_GetUserSelf",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1APIKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "secret": {
          "type": "string",
          "description": "secret is populated only when a new API key is created."
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "organization": {
          "$ref": "#/definitions/v1Organization"
        },
        "project": {
          "$ref": "#/definitions/v1Project"
        },
        "organizationRole": {
          "$ref": "#/definitions/v1OrganizationRole"
        },
        "projectRole": {
          "$ref": "#/definitions/v1ProjectRole"
        }
      }
    },
    "v1CreateAPIKeyRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        }
      }
    },
    "v1CreateOrganizationRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      }
    },
    "v1DeleteAPIKeyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteOrganizationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteProjectResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1InternalAPIKey": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1APIKey"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "v1InternalOrganization": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1Organization"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "v1ListAPIKeysResponse": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1APIKey"
          }
        }
      }
    },
    "v1ListInternalAPIKeysResponse": {
      "type": "object",
      "properties": {
        "apiKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1InternalAPIKey"
          }
        }
      }
    },
    "v1ListInternalOrganizationsResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1InternalOrganization"
          }
        }
      }
    },
    "v1ListOrganizationUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OrganizationUser"
          }
        }
      }
    },
    "v1ListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Organization"
          }
        }
      }
    },
    "v1ListProjectUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProjectUser"
          }
        }
      }
    },
    "v1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Project"
          }
        }
      }
    },
    "v1Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "summary": {
          "$ref": "#/definitions/v1OrganizationSummary",
          "description": "Summary holds summary information about the organization.\nThis field is filled only when `include_summary` is set to true."
        }
      }
    },
    "v1OrganizationRole": {
      "type": "string",
      "enum": [
        "ORGANIZATION_ROLE_UNSPECIFIED",
        "ORGANIZATION_ROLE_OWNER",
        "ORGANIZATION_ROLE_READER"
      ],
      "default": "ORGANIZATION_ROLE_UNSPECIFIED"
    },
    "v1OrganizationSummary": {
      "type": "object",
      "properties": {
        "projectCount": {
          "type": "integer",
          "format": "int32",
          "description": "project_count is the number of projects in the organization."
        },
        "userCount": {
          "type": "integer",
          "format": "int32",
          "description": "user_count is the number of users in the organization."
        }
      }
    },
    "v1OrganizationUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "internalUserId": {
          "type": "string",
          "description": "internal_user_id is populated only for internal gRPC service."
        },
        "organizationId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1OrganizationRole"
        }
      }
    },
    "v1Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ProjectAssignment"
          },
          "description": "assignments is the list of assigned clusters and namespaces for the project."
        },
        "kubernetesNamespace": {
          "type": "string",
          "title": "kubernetes_namespace is the namespace where the fine-tuning jobs for the project run.\nTODO("
        },
        "organizationId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "summary": {
          "$ref": "#/definitions/v1ProjectSummary",
          "description": "Summary holds summary information about the project.\nThis field is filled only when `include_summary` is set to true."
        }
      }
    },
    "v1ProjectAssignment": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "cluster is set of a namespace for a specific cluster is assigned to this project. It it empty\nwhen the namespace of any registered clusters is assigned to this project."
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "v1ProjectRole": {
      "type": "string",
      "enum": [
        "PROJECT_ROLE_UNSPECIFIED",
        "PROJECT_ROLE_OWNER",
        "PROJECT_ROLE_MEMBER"
      ],
      "default": "PROJECT_ROLE_UNSPECIFIED"
    },
    "v1ProjectSummary": {
      "type": "object",
      "properties": {
        "userCount": {
          "type": "integer",
          "format": "int32",
          "description": "user_count is the number of users in the project."
        }
      }
    },
    "v1ProjectUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/v1ProjectRole"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "internalId": {
          "type": "string",
          "description": "internal_id is populated only for internal gRPC service."
        }
      }
    }
  }
}
